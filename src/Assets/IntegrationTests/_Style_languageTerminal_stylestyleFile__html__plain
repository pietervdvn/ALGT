Output {_files = fromList [], _stdOut = ["While checking file Style.language:","  Warning:","    While checking the totality of function \"checkAllLoops\":","      Following calls will fall through:","        checkAllLoops(styles, (style styles))","    While checking the totality of function \"findPropertyInDefaults\":","      Following calls will fall through:","        findPropertyInDefaults((defaultsHeader properties nls), identifier)","    While checking the totality of function \"getDefaultPropertyFor\":","      Following calls will fall through:","        getDefaultPropertyFor(styleFile, identifier)","    While checking the totality of function \"knownStylesIn\":","      Following calls will fall through:","        knownStylesIn(styleFile)","    While checking the totality of function \"styleName\":","      Following calls will fall through:","        styleName(style)","    ","    While checking liveability of every clause in function \"expandFile\":","      expandFile(title (_ (constants:constants) _) defaultSect styleSect)","                               = title \"\\n\" expandDefaults(constants, defaultSect) expandStyleSect(constants, styleSect) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"expandProperties\":","      expandProperties(c, (p \":\" key:property))","                               = p \"=\" findConstant(c, key) will never match anything, as the possible arguments are already consumed","      expandProperties(_, p \"=\" key)","                               = p \"=\" key will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"expandStyles\":","      expandStyles(c, style)   = expandStyle(c, style) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"fallbackFor\":","      fallbackFor((_ _ \"(\" fb \")\" _ _ _) props)","                               = fb will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"findConstant\":","      findConstant((key \"=\" value) _ _, key)","                               = value will never match anything, as the possible arguments are already consumed","      findConstant(key \"=\" value, key)","                               = value will never match anything, as the possible arguments are already consumed","      findConstant(_, key)     = !error(\"Constant not found: \", key) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"findProperty\":","      findProperty((key \"=\" value:property) _ _, key)","                               = value will never match anything, as the possible arguments are already consumed","      findProperty((key \":\" value) _ _, _)","                               = !error(\"Non-normalized input\") will never match anything, as the possible arguments are already consumed","      findProperty(key \":\" value, _)","                               = !error(\"Non-normalized input\") will never match anything, as the possible arguments are already consumed","      findProperty(key \"=\" value, key)","                               = value will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"findPropertyInDefaults\":","      findPropertyInDefaults(_ (p:properties) _, key)","                               = findProperty(p, key) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"findStyle\":","      findStyle((_ key \"(\" fb \")\" _ dashes _) properties, key)","                               = (\"\\n\" key \"(\" fb \")\" \"\\n\" dashes \"\\n\") properties will never match anything, as the possible arguments are already consumed","      findStyle((_ key _ dashes _) properties, key)","                               = (\"\\n\" key \"\\n\" dashes \"\\n\") properties will never match anything, as the possible arguments are already consumed","      findStyle((rest:style), styleN)","                               = (\"\\n\" \"s\" \"\\n\" \"---\" \"\\n\") (\"-\" \"=\" 0) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"findStyleIn\":","      findStyleIn(_ (styles:styles) _, id)","                               = findStyle(styles, id) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"getDefaultPropertyFor\":","      getDefaultPropertyFor(title _ defaults _, propN)","                               = findPropertyInDefaults(defaults, propN) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"knownStyles\":","      knownStyles(style)       = styleName(style) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"knownStylesIn\":","      knownStylesIn(_ _ _ (_ (styles:styles) _))","                               = knownStyles(styles) will never match anything, as the possible arguments are already consumed","    While checking liveability of every clause in function \"styleName\":","      styleName((_ h _ _ _) _) = h will never match anything, as the possible arguments are already consumed","      styleName((_ h \"(\" _ \")\" _ _ _) _)","                               = h will never match anything, as the possible arguments are already consumed","    ","    While checking that the functions do have the strictest possible types:","      \"findProperty\" can be typed as \"questionMark\", instead of a \"mvalue\"","      \"findPropertyIn\" can be typed as \"questionMark\", instead of a \"mvalue\"","      \"findPropertyInDefaults\" can be typed as \"questionMark\", instead of a \"mvalue\""," # Parsed and rendered: 1,1;267,1","<html><style><!-- body {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".statement {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".identifier {background-color:#000000;color:#ff0000;font-size:12px;font-family:\"Ubuntu Mono\";}",".type {background-color:#000000;color:#5555ff;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".constant {background-color:#000000;color:#ffff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".number {background-color:#000000;color:#ffff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".float {background-color:#000000;color:#ffff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".string {background-color:#000000;color:#ffff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".char {background-color:#000000;color:#ffff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".special-char {background-color:#000000;color:#bbbb00;font-size:12px;font-family:\"Ubuntu Mono\";}",".keyword {background-color:#000000;color:#009900;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".builtin {background-color:#000000;color:#009900;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".preprocessor {background-color:#000000;color:#aa22aa;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".comment {background-color:#000000;color:#999999;font-size:12px;font-family:\"Ubuntu Mono\";}",".noise {background-color:#000000;color:#999999;font-size:12px;font-family:\"Ubuntu Mono\";}",".header {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header1 {background-color:#000000;color:#00ff00;font-size:22px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header2 {background-color:#000000;color:#00ff00;font-size:20px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header3 {background-color:#000000;color:#00ff00;font-size:18px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header4 {background-color:#000000;color:#00ff00;font-size:16px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header5 {background-color:#000000;color:#00ff00;font-size:14px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".header6 {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".emph {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"italic\";}",".strong {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".url {background-color:#000000;color:#5555ff;font-size:12px;font-family:\"Ubuntu Mono\";text-decoration:\"underline\";}",".code {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"monospace\";}",".hline {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".note {background-color:#5555ff;color:#ffffff;font-size:12px;font-family:\"Ubuntu Mono\";}",".warning {background-color:#ffff00;color:#000000;font-size:12px;font-family:\"Ubuntu Mono\";}",".error {background-color:#ff0000;color:#000000;font-size:12px;font-family:\"Ubuntu Mono\";}",".todo {background-color:#bbbb00;color:#000000;font-size:12px;font-family:\"Ubuntu Mono\";}",".fixme {background-color:#ffff00;color:#000000;font-size:12px;font-family:\"Ubuntu Mono\";}",".cursor {background-color:#000000;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";}",".linehighlight {background-color:#505050;color:#00ff00;font-size:12px;font-family:\"Ubuntu Mono\";}",".selection {background-color:#00ff00;color:#000000;font-size:12px;font-family:\"Ubuntu Mono\";}",".linenumbers {background-color:#000099;color:#ffffff;font-size:12px;font-family:\"Ubuntu Mono\";font-weight:\"bold\";} --></style><body><br />terminal<br />********<br /><br />Constants<br />=========<br /><br />black&#9;&nbsp;=&nbsp;#000000<br />white&#9;&nbsp;=&nbsp;#ffffff<br />red&#9;&nbsp;=&nbsp;#ff0000<br />green&#9;&nbsp;=&nbsp;#00ff00<br />blue&#9;&nbsp;=&nbsp;#5555ff<br />darkblue&#9;&nbsp;=&nbsp;#000099<br /><br />grey&#9;&nbsp;=&nbsp;#999999<br />darkgrey&#9;&nbsp;=&nbsp;#505050<br />darkgreen&#9;&nbsp;=&nbsp;#009900<br />yellow&#9;&nbsp;=&nbsp;#ffff00<br />darkyellow&#9;&nbsp;=&nbsp;#bbbb00<br />purple&#9;&nbsp;=&nbsp;#aa22aa<br /><br />bold&nbsp;&#9;&nbsp;=&nbsp;&quot;bold&quot;<br />italic&nbsp;&#9;&nbsp;=&nbsp;&quot;italic&quot;<br />underline&#9;&nbsp;=&nbsp;&quot;underline&quot;<br />monospace&#9;&nbsp;=&nbsp;&quot;monospace&quot;<br /><br /><br />Defaults<br />========<br /><br />foreground-color&nbsp;:&nbsp;green&nbsp;<br />background-color&nbsp;:&nbsp;black<br />font-size&nbsp;&#9;&nbsp;=&nbsp;12<br />font-family&nbsp;&#9;&nbsp;=&nbsp;&quot;Ubuntu&nbsp;Mono&quot;<br /><br />svg-line-color&nbsp;&nbsp;:&nbsp;green<br />svg-line-thickness&nbsp;&#9;&nbsp;=&nbsp;2<br />svg-dotsize&nbsp;&nbsp;&#9;&nbsp;=&nbsp;4<br />svg-fontsize&nbsp;&nbsp;&#9;&nbsp;=&nbsp;20<br /><br /><br />Styles<br />======<br /><br /><br />&nbsp;statement<br />-----------<br />&nbsp;foreground-color:&nbsp;green<br /><br /><br />&nbsp;identifier&nbsp;(statement)<br />------------------------<br /><br />foreground-color:&nbsp;red<br /><br />&nbsp;type<br />------<br /><br />foreground-color:&nbsp;blue<br />font-style:&nbsp;bold<br /><br />&nbsp;constant&nbsp;(statement)<br />----------------------<br /><br />foreground-color:&nbsp;yellow<br /><br /><br />&nbsp;number&nbsp;(constant)<br />-------------------<br /><br />/<br /><br /><br />&nbsp;float&nbsp;(constant)<br />-------------------<br /><br />/<br /><br /><br />&nbsp;string&nbsp;(constant)<br />-------------------<br /><br />/<br /><br /><br />&nbsp;char&nbsp;(constant)<br />-----------------<br /><br />/<br /><br /><br />&nbsp;special-char&nbsp;(constant)<br />-------------------------<br /><br />foreground-color:&nbsp;darkyellow<br /><br />&nbsp;keyword&nbsp;(statement)<br />---------------------<br /><br />&nbsp;foreground-color:&nbsp;darkgreen<br />&nbsp;font-style:&nbsp;bold<br /><br /><br /><br />&nbsp;builtin&nbsp;(keyword)<br />-------------------<br /><br />/<br /><br /><br />&nbsp;preprocessor<br />--------------<br /><br />font-style:&nbsp;bold<br />foreground-color:&nbsp;purple<br /><br /><br /><br /><br /><br /><br />&nbsp;comment&nbsp;<br />---------<br /><br />foreground-color:&nbsp;grey<br /><br />&nbsp;noise&nbsp;(comment)<br />------------------<br /><br />font-style:&nbsp;normal<br />foreground-color:&nbsp;grey<br />svg-linecolor&nbsp;:&nbsp;grey<br /><br /><br /><br /><br />&nbsp;header<br />--------<br /><br />size&nbsp;&#9;&nbsp;=&nbsp;20<br />font-style&nbsp;:&nbsp;bold<br /><br />&nbsp;header1&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;22<br /><br />&nbsp;header2&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;20<br /><br />&nbsp;header3&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;18<br /><br /><br />&nbsp;header4&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;16<br /><br /><br />&nbsp;header5&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;14<br /><br />&nbsp;header6&nbsp;(header)<br />-------------------<br /><br />font-size&#9;&nbsp;=&nbsp;12<br /><br /><br /><br /><br /><br /><br />&nbsp;emph<br />------<br /><br />font-style:&nbsp;italic<br /><br /><br />&nbsp;strong<br />--------<br /><br />font-style:&nbsp;bold<br /><br />&nbsp;url<br />-----<br /><br />foreground-color:&nbsp;blue<br />font-decoration:&nbsp;underline<br /><br /><br />&nbsp;code<br />------<br /><br />font-style:&nbsp;monospace<br /><br /><br />&nbsp;hline<br />-------<br /><br />special&#9;&nbsp;=&nbsp;&quot;hline&quot;<br /><br /><br />&nbsp;note<br />------<br /><br />foreground-color:&nbsp;white<br />background-color:&nbsp;blue<br /><br /><br />&nbsp;warning&nbsp;(note)<br />----------------<br /><br />foreground-color:&nbsp;black<br />background-color:yellow<br /><br />&nbsp;error&nbsp;(note)<br />--------------<br /><br />foreground-color:&nbsp;black<br />background-color:&nbsp;red<br /><br /><br /><br />&nbsp;&nbsp;todo&nbsp;(note)<br />--------------<br /><br />foreground-color:&nbsp;black<br />background-color:&nbsp;darkyellow<br /><br /><br /><br />&nbsp;fixme&nbsp;(warning)<br />-----------------<br /><br />/<br /><br /><br />&nbsp;cursor<br />--------<br /><br />font-style:&nbsp;bold<br /><br />&nbsp;linehighlight<br />---------------&nbsp;<br />&nbsp;<br />&nbsp;background-color:&nbsp;darkgrey<br /><br />&nbsp;selection<br />-----------<br /><br />&nbsp;background-color:&nbsp;green<br />&nbsp;foreground-color:&nbsp;black<br /><br />&nbsp;linenumbers<br />-------------<br /><br />&nbsp;font-style:&nbsp;bold<br />&nbsp;foreground-color:&nbsp;white<br />&nbsp;background-color:&nbsp;darkblue<br /></body></html>"]}